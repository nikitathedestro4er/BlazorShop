@page "/edit/products"
@using BlazorShop.Shared.RequestFeatures
@layout SimpleLayout
@attribute [Authorize(Roles = "Administrator")]


<div class="row">
    <div class="col-md-5">
        <Search OnSearchChanged="SearchChanged"/>
    </div>
<div class="col-md-5">
    <Sort OnSortChanged="SortChanged"/>
</div>
    <div class="col-md-2">
        <button type="button" class="btn btn-primary" @onclick="() => RedirectToCreate()">Create Product</button>
    </div>
</div>
<div class="row">
    <AdminProductList Products="ProductList" OnDeleted="DeleteProduct"/>
</div>
<div class="row">
    <div class="col">
        <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
    </div>
</div>
@code {
    
    [Parameter]
    public string CategoryUrl { get; set; }
    
    [Inject]
    public NavigationManager NavigationManager { get; set; }
    
    public List<Product> ProductList { get; set; } = new List<Product>();
    public MetaData MetaData { get; set; } = new MetaData();

    private ProductParameters _productParameters = new ProductParameters();

    [Inject]
    public IProductService ProductService { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        await GetProducts();
    }
    

    private async Task SelectedPage(int page)
    {
        _productParameters.PageNumber = page;
        await GetProducts();
    }

    private async Task GetProducts()
    {
        var pagingResponse = await ProductService.GetProducts(_productParameters,CategoryUrl);
        ProductList = pagingResponse.Items;
        MetaData = pagingResponse.MetaData;
    }
    
    private async Task SearchChanged(string searchTerm)
    {
        Console.WriteLine(searchTerm);
        _productParameters.PageNumber = 1;
        _productParameters.SearchTerm = searchTerm;
        await GetProducts();
    }
    
    private async Task SortChanged(string orderBy)
    {
        Console.WriteLine(orderBy);
        _productParameters.OrderBy = orderBy;
        await GetProducts();
    }

    private async Task DeleteProduct(int id)
    {
        await ProductService.DeleteProduct(id);
        _productParameters.PageNumber = 1;
        await GetProducts();
    }
    
    private void RedirectToCreate()
    {
        NavigationManager.NavigateTo($"edit/createproduct");
    }
}